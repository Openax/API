{
  "openapi": "3.0.0",
  "info": {
    "title": "Openax",
    "description": "Openax API\n",
    "termsOfService": "https://openax.com",
    "contact": {
      "email": "apiteam@openax.com",
      "name": "Team API"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/api/ledgers": {
      "get": {
        "summary": "Get all Ledgers",
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "iban": {
                      "type": "string",
                      "minLength": 1
                    },
                    "iban_id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "bic": {
                      "type": "string",
                      "minLength": 1
                    },
                    "balance_id": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "iban",
                    "iban_id",
                    "bic",
                    "balance_id"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "ba6c2e77-7d5d-4a1e-936e-e524bb7cb1ea",
                      "name": "Carlos corp",
                      "iban": "GB73OPEX00993040952115",
                      "iban_id": "d92198b0-9087-4381-aa8f-169f7e9d6d47",
                      "bic": "OPEXGB2L",
                      "balance_id": "0c2f3f0a-6ab4-4863-91b9-1de53b3af554"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-ledgers"
      }
    },
    "/api/balances": {
      "get": {
        "summary": "Get all Balances",
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "amount": {
                      "type": "string",
                      "minLength": 1
                    },
                    "Currency": {
                      "type": "object",
                      "required": [
                        "id",
                        "symbol"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "symbol": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "amount",
                    "Currency"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "0c2f3f0a-6ab4-4863-91b9-1de53b3af554",
                      "amount": "11",
                      "Currency": {
                        "id": "0f543a3a-47f2-4a59-9c59-7eaddc894bfd",
                        "symbol": "EUR"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-balances"
      }
    },
    "/api/beneficiary/add": {
      "post": {
        "summary": "Create a Beneficiary",
        "operationId": "postNewBeneficiary",
        "responses": {
          "200": {
            "description": "Succesfull",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "created_at": {
                      "type": "string",
                      "minLength": 1
                    },
                    "name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "street_line1": {
                          "type": "string",
                          "minLength": 1
                        },
                        "city": {
                          "type": "string",
                          "minLength": 1
                        },
                        "country": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "street_line1",
                        "city",
                        "country"
                      ]
                    },
                    "bank_accounts": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [
                          "iban",
                          "bic",
                          "currency"
                        ],
                        "properties": {
                          "iban": {
                            "type": "string",
                            "minLength": 1
                          },
                          "bic": {
                            "type": "string",
                            "minLength": 1
                          },
                          "currency": {
                            "type": "string",
                            "minLength": 1
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "name",
                    "address",
                    "bank_accounts"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "created_at": "2019-08-24T14:15:22Z",
                      "name": "Charles Corp",
                      "address": {
                        "street_line1": "King's street 321",
                        "city": "London",
                        "country": "uk"
                      },
                      "bank_accounts": [
                        {
                          "iban": "GB98MIDL07009312345678",
                          "bic": "ABCMGB21",
                          "currency": "EUR"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "406": {
            "description": "Unauthorized"
          }
        },
        "description": "Endpoint to create a new Beneficiary",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "minLength": 1,
                    "enum": [
                      "corporate",
                      "individual"
                    ]
                  },
                  "first_name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "last_name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "company_name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "address": {
                    "type": "object",
                    "required": [
                      "street_line1",
                      "city",
                      "country"
                    ],
                    "properties": {
                      "street_line1": {
                        "type": "string",
                        "minLength": 1
                      },
                      "city": {
                        "type": "string",
                        "minLength": 1
                      },
                      "country": {
                        "type": "string",
                        "minLength": 1
                      }
                    }
                  },
                  "bank_accounts": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "iban": {
                          "type": "string",
                          "minLength": 1
                        },
                        "bic": {
                          "type": "string",
                          "minLength": 1
                        },
                        "currency": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "iban",
                        "bic",
                        "currency"
                      ]
                    }
                  }
                },
                "required": [
                  "type",
                  "address",
                  "bank_accounts"
                ]
              },
              "examples": {
                "add beneficiary individual": {
                  "value": {
                    "type": "individual",
                    "first_name": "Dupont",
                    "last_name": "Martin",
                    "address": {
                      "street_line1": "Rue de paris 123",
                      "city": "Paris",
                      "country": "fr"
                    },
                    "bank_accounts": [
                      {
                        "iban": "FR7630006000011234567890189",
                        "bic": "ACEMFRP1",
                        "currency": "EUR"
                      }
                    ]
                  }
                },
                "Add beneficiary corporate": {
                  "value": {
                    "type": "corporate",
                    "company_name": "Charles Corp",
                    "address": {
                      "street_line1": "King's street 321",
                      "city": "London",
                      "country": "uk"
                    },
                    "bank_accounts": [
                      {
                        "iban": "GB98MIDL07009312345678",
                        "bic": "ABCMGB21",
                        "currency": "EUR"
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "Create a new beneficiary"
        },
        "tags": [
          "Beneficiary"
        ]
      }
    },
    "/api/beneficiary/{id}": {
      "get": {
        "summary": "Beneficiary",
        "operationId": "getBeneficiary",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "minLength": 1,
                      "format": "date-time"
                    },
                    "name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "street_line1": {
                          "type": "string",
                          "minLength": 1
                        },
                        "street_line2": {
                          "type": "string",
                          "minLength": 1
                        },
                        "region": {
                          "type": "string",
                          "minLength": 1
                        },
                        "city": {
                          "type": "string",
                          "minLength": 1
                        },
                        "country": {
                          "type": "string",
                          "minLength": 1
                        },
                        "postcode": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "country"
                      ]
                    },
                    "bank_accounts": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "iban": {
                            "type": "string",
                            "minLength": 1
                          },
                          "bic": {
                            "type": "string",
                            "minLength": 1
                          },
                          "currency": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "iban",
                          "bic",
                          "currency"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "name"
                  ]
                },
                "examples": {
                  "Found beneficiary": {
                    "value": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "created_at": "2019-08-24T14:15:22Z",
                      "name": "Dupont Martin",
                      "address": {
                        "street_line1": "Rue de paris 123",
                        "city": "Paris",
                        "country": "fr"
                      },
                      "bank_accounts": [
                        {
                          "iban": "FR7630006000011234567890189",
                          "bic": "ACEMFRP1",
                          "currency": "EUR"
                        }
                      ]
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              },
              "text/html": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "No beneficiaries found"
          }
        },
        "parameters": [],
        "description": "Retrive beneficiary by ID",
        "tags": [
          "Beneficiary"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "id",
          "in": "path",
          "description": "Id of beneficiary to return",
          "required": true
        }
      ]
    },
    "/api/beneficiary/delete/{id}": {
      "post": {
        "summary": "Delete a beneficiary by ID",
        "operationId": "deleteBeneficiaryById",
        "description": "Endpoint te remove a beneficiary from your list",
        "tags": [
          "Beneficiary"
        ],
        "responses": {
          "200": {
            "description": "successful operation - beneficiary removed"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Not Found -- The requested resource could not be found."
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "id of the beneficiary to remove"
        }
      ]
    },
    "/api/beneficiaries": {
      "get": {
        "summary": "Get all beneficiaries",
        "tags": [
          "Beneficiary"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "minLength": 1,
                            "format": "uuid"
                          },
                          "created_at": {
                            "type": "string",
                            "minLength": 1,
                            "format": "date-time"
                          },
                          "name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "address": {
                            "type": "object",
                            "properties": {
                              "street_line1": {
                                "type": "string",
                                "minLength": 1
                              },
                              "street_line2": {
                                "type": "string",
                                "minLength": 1
                              },
                              "region": {
                                "type": "string",
                                "minLength": 1
                              },
                              "city": {
                                "type": "string",
                                "minLength": 1
                              },
                              "country": {
                                "type": "string",
                                "minLength": 1
                              },
                              "postcode": {
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "required": [
                              "country"
                            ]
                          },
                          "bank_accounts": {
                            "type": "array",
                            "uniqueItems": true,
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "properties": {
                                "iban": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "bic": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "currency": {
                                  "type": "string",
                                  "minLength": 1
                                }
                              },
                              "required": [
                                "iban",
                                "bic",
                                "currency"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "name"
                        ]
                      }
                    },
                    "count": {
                      "type": "number"
                    },
                    "per_page": {
                      "type": "number"
                    },
                    "page": {
                      "type": "number"
                    },
                    "page_count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "count",
                    "per_page",
                    "page",
                    "page_count"
                  ]
                },
                "examples": {
                  "All data": {
                    "value": {
                      "data": [
                        {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "created_at": "2019-08-24T14:15:22Z",
                          "name": "Dupont Martin",
                          "address": {
                            "street_line1": "Rue de paris 123",
                            "city": "Paris",
                            "country": "fr"
                          },
                          "bank_accounts": [
                            {
                              "iban": "FR7630006000011234567890189",
                              "bic": "ACEMFRP1",
                              "currency": "EUR"
                            }
                          ]
                        },
                        {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "created_at": "2019-08-24T14:15:22Z",
                          "name": "Charles Corp",
                          "address": {
                            "street_line1": "King's street 321",
                            "city": "London",
                            "country": "uk"
                          },
                          "bank_accounts": [
                            {
                              "iban": "GB98MIDL07009312345678",
                              "bic": "ABCMGB21",
                              "currency": "EUR"
                            }
                          ]
                        }
                      ],
                      "count": 2,
                      "per_page": 10,
                      "page": 1,
                      "page_count": 1
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-beneficiaries",
        "description": "This endpoint to return all your beneficiaries",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "minimum": 0
            },
            "in": "query",
            "name": "begin"
          }
        ]
      }
    },
    "/api/payment/add": {
      "post": {
        "summary": "Add a payment",
        "operationId": "post-bank-add",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "id",
                    "status"
                  ]
                },
                "examples": {
                  "example normal": {
                    "value": {
                      "id": "ba6c2e77-6276-4993-bfeb-9604dbeb2c57",
                      "status": "pending"
                    }
                  },
                  "example turbo": {
                    "value": {
                      "id": "d92198b0-6276-4993-bfeb-9604dbeb2c57",
                      "status": "pending"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Endpoint to create a new payment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "iban_id": {
                    "type": "string",
                    "minLength": 1,
                    "format": "uuid"
                  },
                  "beneficiary_id": {
                    "type": "string",
                    "minLength": 1,
                    "format": "uuid"
                  },
                  "amount": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "string",
                    "minLength": 1,
                    "description": "three lette ISO code"
                  },
                  "date": {
                    "type": "string",
                    "minLength": 1,
                    "format": "date",
                    "example": "2020-12-07"
                  },
                  "reason": {
                    "type": "string",
                    "minLength": 1
                  },
                  "method": {
                    "type": "string",
                    "minLength": 1,
                    "enum": [
                      "normal",
                      "turbo"
                    ]
                  },
                  "ledger_id": {
                    "type": "string",
                    "minLength": 1,
                    "format": "uuid"
                  }
                },
                "required": [
                  "iban_id",
                  "beneficiary_id",
                  "amount",
                  "currency",
                  "date",
                  "reason",
                  "method",
                  "ledger_id"
                ]
              },
              "examples": {
                "Post normal": {
                  "value": {
                    "iban_id": "d92198b0-9087-4381-aa8f-169f7e9d6d47",
                    "beneficiary_id": "5fe933ca-6708-4eec-acfd-9604dbeb2c57",
                    "amount": 1,
                    "currency": "EUR",
                    "date": "2020-12-07",
                    "reason": "Invoice 23",
                    "method": "normal",
                    "ledger_id": "ba6c2e77-7d5d-4a1e-936e-e524bb7cb1ea"
                  }
                },
                "Post Instant": {
                  "value": {
                    "iban_id": "d92198b0-9087-4381-aa8f-169f7e9d6d47",
                    "beneficiary_id": "5fe933ca-6708-4eec-acfd-9604dbeb2c57",
                    "amount": 1,
                    "currency": "EUR",
                    "date": "2020-12-07",
                    "reason": "Invoice 24",
                    "method": "turbo",
                    "ledger_id": "ba6c2e77-7d5d-4a1e-936e-e524bb7cb1ea"
                  }
                }
              }
            }
          },
          "description": "Post a new payment "
        },
        "tags": [
          "Payment"
        ]
      }
    },
    "/api/payment/{id}": {
      "get": {
        "summary": "Find payment by ID",
        "operationId": "getPaymentById",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "minLength": 1
                    },
                    "id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "minLength": 1,
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "minLength": 1,
                      "format": "date-time"
                    },
                    "reason": {
                      "type": "string",
                      "minLength": 1
                    },
                    "amount": {
                      "type": "string",
                      "minLength": 1
                    },
                    "date": {
                      "type": "string",
                      "minLength": 1,
                      "format": "date"
                    },
                    "beneficiary_id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "iban_id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "currency": {
                      "type": "string",
                      "minLength": 1,
                      "description": "three letter ISO code"
                    }
                  },
                  "required": [
                    "status",
                    "id",
                    "created_at",
                    "updated_at",
                    "reason",
                    "amount",
                    "date",
                    "beneficiary_id",
                    "iban_id",
                    "currency"
                  ]
                },
                "examples": {
                  "One payment": {
                    "value": {
                      "status": "pending",
                      "id": "ca079bda-9f4a-40c5-bcad-5303f0018d2e",
                      "created_at": "2020-12-07T15:27:06.098Z",
                      "updated_at": "2020-12-07T15:27:06.541Z",
                      "reason": "Invoice 23",
                      "amount": "1",
                      "date": "2020-12-07",
                      "beneficiary_id": "5fe933ca-6708-4eec-acfd-9604dbeb2c57",
                      "iban_id": "d92198b0-9087-4381-aa8f-169f7e9d6d47",
                      "currency": "EUR"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Payment not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "Not found": {
                    "value": {
                      "error": "Not found"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Endpoint to get one payment by Id",
        "tags": [
          "Payment"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/api/payments": {
      "get": {
        "summary": "Get all payments",
        "operationId": "getAllPayments",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "send",
                              "completed",
                              "error",
                              "refused",
                              "pending"
                            ]
                          },
                          "method": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "amount": {
                            "type": "number"
                          },
                          "beneficiary_id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "ledger_id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "currency": {
                            "type": "string",
                            "description": "3 letters ISO code"
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "example": "2020-06-01"
                          },
                          "reference": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "count": {
                      "type": "number"
                    },
                    "per_page": {
                      "type": "number"
                    },
                    "page": {
                      "type": "number"
                    },
                    "page_count": {
                      "type": "number"
                    }
                  }
                },
                "examples": {
                  "All Payments": {
                    "value": {
                      "data": [
                        {
                          "status": "completed",
                          "method": "SEPA",
                          "id": "201c6e0f-c720-4fe1-a318-fef451ab0af1",
                          "created_at": "2020-03-24T09:00:22.859Z",
                          "reason": "Invoice 123456 Smith Co.",
                          "amount": 4,
                          "date": "2020-03-25",
                          "beneficiary_id": "023a0383-ccb0-48ee-ab2b-2d640e57c380",
                          "ledger_id": "0a88b35a-2652-46d9-9954-335c2d9b47f8",
                          "currency": "EUR",
                          "reference": "Invoice 12345"
                        },
                        {
                          "status": "completed",
                          "method": "FAST",
                          "id": "77a5d560-d131-44d6-be19-85ac6110f3db",
                          "created_at": "2020-03-26T11:38:06.119Z",
                          "reason": "Invoice 554412 John Co.",
                          "amount": 4,
                          "date": "2020-03-26",
                          "beneficiary_id": "139478be-65f3-46b5-9804-03dcf87dcdc1",
                          "ledger_id": "9e51441c-de1a-4638-ba3a-6394f45b6b99",
                          "currency": "EUR",
                          "reference": "Invoice 58845"
                        }
                      ],
                      "count": 2,
                      "per_page": 25,
                      "page": 1,
                      "page_count": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "No payments found"
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-06-01"
            },
            "in": "query",
            "name": "from",
            "description": "filters crated_at"
          },
          {
            "schema": {
              "type": "string",
              "example": "2020-06-01"
            },
            "in": "query",
            "name": "to",
            "description": "filters created_at"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "begin",
            "description": "record to begin with (start at 0)"
          }
        ],
        "description": "Endpoint to get all payments\n\nPagination is supported. You receive a limit of 25 records per request. In the response you receive  the count of records, so you can send the next request with the query param begin with the correct value in order to get the next records",
        "tags": [
          "Payment"
        ]
      }
    },
    "/api/transactions": {
      "get": {
        "summary": "get all transactions",
        "operationId": "getAllTransactions",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "minLength": 1
                          },
                          "method": {
                            "type": "string",
                            "enum": [
                              "normal",
                              "turbo"
                            ]
                          },
                          "mode": {
                            "type": "string",
                            "minLength": 1,
                            "enum": [
                              "transfer"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "minLength": 1,
                            "format": "uuid"
                          },
                          "created_at": {
                            "type": "string",
                            "minLength": 1,
                            "format": "date-time"
                          },
                          "amount": {
                            "type": "string",
                            "minLength": 1
                          },
                          "name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "currency": {
                            "type": "string",
                            "minLength": 1,
                            "description": "three letter ISO code"
                          }
                        },
                        "required": [
                          "type",
                          "mode",
                          "id",
                          "created_at",
                          "amount",
                          "name",
                          "currency"
                        ]
                      }
                    },
                    "count": {
                      "type": "number"
                    },
                    "per_page": {
                      "type": "number"
                    },
                    "page": {
                      "type": "number"
                    },
                    "page_count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "count",
                    "per_page",
                    "page",
                    "page_count"
                  ]
                },
                "examples": {
                  "Response All Transactions": {
                    "value": {
                      "data": [
                        {
                          "type": "credit",
                          "method": "normal",
                          "mode": "transfer",
                          "id": "ec64fc60-eb25-4606-9b00-0b0c4244c647",
                          "created_at": "2020-12-07T13:38:36.111Z",
                          "amount": "1",
                          "name": "Some Creditor",
                          "currency": "EUR"
                        },
                        {
                          "type": "credit",
                          "method": "normal",
                          "mode": "transfer",
                          "id": "c261b438-9c8d-4d52-8b32-9c20f175f4b4",
                          "created_at": "2020-12-07T13:40:32.889Z",
                          "amount": "1",
                          "name": "Some Creditor",
                          "currency": "EUR"
                        }
                      ],
                      "count": 2,
                      "per_page": 10,
                      "page": 1,
                      "page_count": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No Records found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": "No record found"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-05-21"
            },
            "in": "query",
            "name": "from",
            "description": "Filters Created_at"
          },
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-06-21"
            },
            "in": "query",
            "name": "to",
            "description": "filters Created_at (default is now)"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "begin",
            "description": "record to begin with (start at 0)"
          }
        ],
        "description": "Endpoint to retrieve all transactions\n\nPagination is supported. You receive a limit of 25 records per request. In the response you receive  the count of records, so you can send the next request with the query param begin with the correct value in order to get the next records",
        "tags": [
          "Transaction"
        ]
      }
    },
    "/api/mandate/add": {
      "post": {
        "summary": "Create new mandate",
        "operationId": "post-api-mandate-add",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "id",
                    "status"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "94737c2a-72bb-4a46-a74f-51e9bbb07358",
                      "status": "new"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "mandate"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "iban": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Debitor Iban"
                  },
                  "bic": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Debitor Bic"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Debitor Name"
                  },
                  "signature_date": {
                    "type": "string",
                    "minLength": 1
                  },
                  "schema_id": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Your Creditor Scheme ID"
                  },
                  "reference": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Your Unique reference for this mandate"
                  },
                  "type": {
                    "type": "string",
                    "minLength": 1,
                    "enum": [
                      "OOFF",
                      "RCUR"
                    ]
                  },
                  "email": {
                    "type": "string",
                    "minLength": 1
                  },
                  "code_tel": {
                    "type": "string",
                    "minLength": 1
                  },
                  "phone": {
                    "type": "string",
                    "minLength": 1
                  },
                  "currency": {
                    "type": "string"
                  }
                },
                "required": [
                  "iban",
                  "bic",
                  "name",
                  "signature_date",
                  "schema_id",
                  "reference",
                  "type",
                  "email",
                  "code_tel",
                  "phone",
                  "currency"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "iban": "MT61PYMX09014000000407910100001",
                    "bic": "XPAYLT20XXX",
                    "name": "Debitor Name",
                    "signature_date": "2020-11-15",
                    "schema_id": "LT02ZZZ777777000",
                    "reference": "mandate-number-one",
                    "type": "RCUR",
                    "email": "example@example.com",
                    "code_tel": "33",
                    "phone": "609090541",
                    "currency": "EUR"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/mandate/{id}": {
      "get": {
        "summary": "Get one mandate",
        "tags": [
          "mandate"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "minLength": 1
                    },
                    "type": {
                      "type": "string",
                      "minLength": 1,
                      "enum": [
                        "OOFF",
                        "RCUR"
                      ]
                    },
                    "code_tel": {
                      "type": "string",
                      "minLength": 1
                    },
                    "id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "minLength": 1,
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "minLength": 1,
                      "format": "date-time"
                    },
                    "schema_id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "iban": {
                      "type": "string",
                      "minLength": 1
                    },
                    "bic": {
                      "type": "string",
                      "minLength": 1
                    },
                    "email": {
                      "type": "string",
                      "minLength": 1
                    },
                    "signature_date": {
                      "type": "string",
                      "minLength": 1,
                      "format": "date"
                    },
                    "phone": {
                      "type": "string",
                      "minLength": 1
                    },
                    "reference": {
                      "type": "string",
                      "minLength": 1
                    },
                    "currency": {
                      "type": "string",
                      "minLength": 1,
                      "description": "three letter ISO code"
                    }
                  },
                  "required": [
                    "status",
                    "type",
                    "code_tel",
                    "id",
                    "created_at",
                    "updated_at",
                    "schema_id",
                    "name",
                    "iban",
                    "bic",
                    "email",
                    "signature_date",
                    "phone",
                    "reference",
                    "currency"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "status": "new",
                      "type": "RCUR",
                      "code_tel": "33",
                      "id": "6b5c84a4-611e-4de1-99bf-1810859e0e4e",
                      "created_at": "2020-12-07T14:27:40.604Z",
                      "updated_at": "2020-12-07T14:27:40.604Z",
                      "schema_id": "LT02ZZZ777777000",
                      "name": "Debitor Name",
                      "iban": "MT61PYMX09014000000407910100001",
                      "bic": "XPAYLT20XXX",
                      "email": "example@example.com",
                      "signature_date": "2020-11-15",
                      "phone": "609090541",
                      "reference": "mandate-number-one",
                      "currency": "EUR"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-mandate",
        "description": "endpoint to return one mandate"
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Id of the Mandate to return"
        }
      ],
      "delete": {
        "summary": "Delete a mandate",
        "operationId": "delete-api-mandate-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "result": {
                      "type": "string",
                      "default": "success"
                    }
                  },
                  "required": [
                    "id",
                    "result"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "result": "success"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Ebdpoint to delete a mandate",
        "tags": [
          "mandate"
        ]
      }
    },
    "/api/mandates": {
      "get": {
        "summary": "Get all mandates",
        "tags": [
          "mandate"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "minLength": 1
                          },
                          "type": {
                            "type": "string",
                            "minLength": 1,
                            "enum": [
                              "OOFF",
                              "RCUR"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "minLength": 1,
                            "format": "uuid"
                          },
                          "created_at": {
                            "type": "string",
                            "minLength": 1,
                            "format": "date-time"
                          },
                          "name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "iban": {
                            "type": "string",
                            "minLength": 1
                          },
                          "bic": {
                            "type": "string",
                            "minLength": 1
                          },
                          "signature_date": {
                            "type": "string",
                            "minLength": 1
                          },
                          "reference": {
                            "type": "string",
                            "minLength": 1
                          },
                          "currency": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "status",
                          "type",
                          "id",
                          "created_at",
                          "name",
                          "iban",
                          "bic",
                          "signature_date",
                          "reference",
                          "currency"
                        ]
                      }
                    },
                    "count": {
                      "type": "number"
                    },
                    "per_page": {
                      "type": "number"
                    },
                    "page": {
                      "type": "number"
                    },
                    "page_count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "count",
                    "per_page",
                    "page",
                    "page_count"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "data": [
                        {
                          "status": "new",
                          "type": "RCUR",
                          "id": "6b5c84a4-611e-4de1-99bf-1810859e0e4e",
                          "created_at": "2020-12-07T14:27:40.604Z",
                          "name": "Debitor Name",
                          "iban": "MT61PYMX09014000000407910100001",
                          "bic": "XPAYLT20XXX",
                          "signature_date": "2020-11-15",
                          "reference": "mandate-number-one",
                          "currency": "EUR"
                        },
                        {
                          "status": "new",
                          "type": "OOFF",
                          "id": "0ff3492d-28b9-4225-8895-b55643454388",
                          "created_at": "2020-12-07T14:27:31.940Z",
                          "name": "Debitor Name",
                          "iban": "MT61PYMX09014000000407910100001",
                          "bic": "XPAYLT20XXX",
                          "signature_date": "2020-11-14",
                          "reference": "mandate-number-two",
                          "currency": "EUR"
                        }
                      ],
                      "count": 2,
                      "per_page": 10,
                      "page": 1,
                      "page_count": 1
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-mandates",
        "description": "Endpoint to return all your mandates",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "minimum": 0
            },
            "in": "query",
            "name": "begin"
          }
        ]
      }
    },
    "/api/directdebit/add": {
      "post": {
        "summary": "Create new direct debit",
        "operationId": "post-api-directdebit-add",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "id",
                    "status"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "2ede111a-8611-4100-8a3f-e35cfa5b7965",
                      "status": "new"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "mandate_id": {
                    "type": "string",
                    "minLength": 1,
                    "format": "uuid"
                  },
                  "ledger_id": {
                    "type": "string",
                    "minLength": 1,
                    "format": "uuid"
                  },
                  "iban_id": {
                    "type": "string",
                    "minLength": 1,
                    "format": "uuid"
                  },
                  "currency": {
                    "type": "string",
                    "minLength": 1,
                    "description": "three letter ISO code"
                  },
                  "amount": {
                    "type": "number"
                  },
                  "collection_date": {
                    "type": "string",
                    "minLength": 1,
                    "format": "date"
                  },
                  "reason": {
                    "type": "string",
                    "minLength": 1
                  },
                  "sequence": {
                    "type": "string",
                    "enum": [
                      "RCUR",
                      "OOFF",
                      "FRST",
                      "FNAL"
                    ]
                  }
                },
                "required": [
                  "mandate_id",
                  "ledger_id",
                  "iban_id",
                  "currency",
                  "amount",
                  "collection_date",
                  "reason",
                  "sequence"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "mandate_id": "9c47f0be-72b8-4c07-8a43-7d9dbd4ad78b",
                    "ledger_id": "ba6c2e77-7d5d-4a1e-936e-e524bb7cb1ea",
                    "iban_id": "d92198b0-9087-4381-aa8f-169f7e9d6d47",
                    "currency": "EUR",
                    "amount": 3,
                    "collection_date": "2020-12-07",
                    "reason": "Invoice 25",
                    "sequence": "RCUR"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Direct Debit"
        ]
      }
    },
    "/api/directdebit/{id}": {
      "get": {
        "summary": "Get one direct debit",
        "tags": [
          "Direct Debit"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "minLength": 1
                    },
                    "id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "minLength": 1,
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "minLength": 1,
                      "format": "date-time"
                    },
                    "amount": {
                      "type": "string",
                      "minLength": 1
                    },
                    "reason": {
                      "type": "string",
                      "minLength": 1
                    },
                    "collection_date": {
                      "type": "string",
                      "minLength": 1,
                      "format": "date"
                    },
                    "settlement_date": {
                      "type": "string",
                      "format": "date"
                    },
                    "info": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "reference": {
                      "type": "string",
                      "minLength": 1
                    },
                    "currency": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "status",
                    "id",
                    "created_at",
                    "updated_at",
                    "amount",
                    "reason",
                    "collection_date",
                    "name",
                    "reference",
                    "currency"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "status": "in_progress",
                      "id": "2ede111a-8611-4100-8a3f-e35cfa5b7965",
                      "created_at": "2020-12-07T13:56:01.731Z",
                      "updated_at": "2020-12-07T13:56:01.731Z",
                      "amount": "3",
                      "reason": "Invoice 25",
                      "collection_date": "2020-12-07",
                      "settlement_date": "2020-12-07",
                      "info": "ready to send",
                      "name": "Debitor Name",
                      "reference": "mandate-number-one",
                      "currency": "EUR"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-directdebit",
        "description": "Endpoint to return one direct debit"
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "format": "uuid"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the direct debit to return"
        }
      ]
    },
    "/api/directdebits": {
      "get": {
        "summary": "Get all direct debit",
        "tags": [
          "Direct Debit"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "minLength": 1
                          },
                          "id": {
                            "type": "string",
                            "minLength": 1,
                            "format": "uuid"
                          },
                          "created_at": {
                            "type": "string",
                            "minLength": 1,
                            "format": "date-time"
                          },
                          "amount": {
                            "type": "string",
                            "minLength": 1
                          },
                          "reason": {
                            "type": "string",
                            "minLength": 1
                          },
                          "collection_date": {
                            "type": "string",
                            "minLength": 1,
                            "format": "date"
                          },
                          "settlement_date": {
                            "type": "string",
                            "format": "date"
                          },
                          "name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "reference": {
                            "type": "string",
                            "minLength": 1
                          },
                          "currency": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "status",
                          "id",
                          "created_at",
                          "amount",
                          "reason",
                          "collection_date",
                          "name",
                          "reference",
                          "currency"
                        ]
                      }
                    },
                    "count": {
                      "type": "number"
                    },
                    "per_page": {
                      "type": "number"
                    },
                    "page": {
                      "type": "number"
                    },
                    "page_count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "count",
                    "per_page",
                    "page",
                    "page_count"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "data": [
                        {
                          "status": "new",
                          "id": "2ede111a-8611-4100-8a3f-e35cfa5b7965",
                          "created_at": "2020-12-07T13:56:01.731Z",
                          "amount": "3",
                          "reason": "Invoice 25",
                          "collection_date": "2020-12-07",
                          "settlement_date": "2020-12-07",
                          "name": "Debitor Name",
                          "reference": "mandate-number-one",
                          "currency": "EUR"
                        },
                        {
                          "status": "new",
                          "id": "a4317636-ac8f-46a8-90ee-9a093edeb256",
                          "created_at": "2020-12-07T13:55:33.253Z",
                          "amount": "3",
                          "reason": "Invoice 25",
                          "collection_date": "2020-12-07",
                          "settlement_date": "2020-12-07",
                          "name": "Debitor Name",
                          "reference": "mandate-number-two",
                          "currency": "EUR"
                        }
                      ],
                      "count": 2,
                      "per_page": 10,
                      "page": 1,
                      "page_count": 1
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-directdebits",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "minimum": 0
            },
            "in": "query",
            "name": "begin"
          }
        ]
      }
    },
    "/api/debits": {
      "get": {
        "summary": "Get Debits",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "required": [
                          "status",
                          "id",
                          "created_at",
                          "amount",
                          "reason",
                          "settlement_date"
                        ],
                        "properties": {
                          "status": {
                            "type": "string",
                            "minLength": 1
                          },
                          "id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "created_at": {
                            "type": "string",
                            "minLength": 1
                          },
                          "amount": {
                            "type": "string",
                            "minLength": 1
                          },
                          "reason": {
                            "type": "string",
                            "minLength": 1
                          },
                          "settlement_date": {
                            "type": "string",
                            "minLength": 1
                          },
                          "Currency": {
                            "type": "object",
                            "properties": {
                              "symbol": {
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "required": [
                              "symbol"
                            ]
                          },
                          "Mandatereceive": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "required": [
                              "name"
                            ]
                          }
                        }
                      }
                    },
                    "count": {
                      "type": "number"
                    },
                    "per_page": {
                      "type": "number"
                    },
                    "page": {
                      "type": "number"
                    },
                    "page_count": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "count",
                    "per_page",
                    "page",
                    "page_count"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "data": [
                        {
                          "status": "completed",
                          "id": "31b377c1-9f6f-4430-9465-564672d8674c",
                          "created_at": "2020-12-21T13:36:29.539Z",
                          "amount": "12",
                          "reason": "Invoice 25",
                          "settlement_date": "2020-12-21",
                          "Currency": {
                            "symbol": "EUR"
                          },
                          "Mandatereceive": {
                            "name": "John Corp"
                          }
                        },
                        {
                          "status": "completed",
                          "id": "b729bc71-10a9-4a65-9426-ca5527488e16",
                          "created_at": "2020-12-21T13:36:44.407Z",
                          "amount": "23",
                          "reason": "Invoice 26",
                          "settlement_date": "2020-12-21",
                          "Currency": {
                            "symbol": "EUR"
                          },
                          "Mandatereceive": {
                            "name": "Smith Corp"
                          }
                        }
                      ],
                      "count": 2,
                      "per_page": 10,
                      "page": 1,
                      "page_count": 1
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-debits",
        "tags": [
          "Debit"
        ],
        "description": "Get all debits order presented to your account"
      }
    },
    "/api/debit": {
      "get": {
        "summary": "Get one Debit",
        "tags": [
          "Debit"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "minLength": 1
                    },
                    "id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "created_at": {
                      "type": "string",
                      "minLength": 1
                    },
                    "amount": {
                      "type": "string",
                      "minLength": 1
                    },
                    "reason": {
                      "type": "string",
                      "minLength": 1
                    },
                    "settlement_date": {
                      "type": "string",
                      "minLength": 1
                    },
                    "Currency": {
                      "type": "object",
                      "required": [
                        "symbol"
                      ],
                      "properties": {
                        "symbol": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    },
                    "Mandatereceive": {
                      "type": "object",
                      "required": [
                        "status",
                        "name",
                        "signature_date",
                        "reference"
                      ],
                      "properties": {
                        "status": {
                          "type": "string",
                          "minLength": 1
                        },
                        "name": {
                          "type": "string",
                          "minLength": 1
                        },
                        "signature_date": {
                          "type": "string",
                          "minLength": 1
                        },
                        "reference": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "id",
                    "created_at",
                    "amount",
                    "reason",
                    "settlement_date",
                    "Currency",
                    "Mandatereceive"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "status": "completed",
                      "id": "2b608cbb-9894-46da-9035-bbea0f8b1774",
                      "created_at": "2020-12-21T13:43:17.927Z",
                      "amount": "1",
                      "reason": "Invoice 25",
                      "settlement_date": "2020-12-21",
                      "Currency": {
                        "symbol": "EUR"
                      },
                      "Mandatereceive": {
                        "status": "accepted",
                        "name": "Creditor Name",
                        "signature_date": "2020-11-15",
                        "reference": "mandate-receive-three"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-debit",
        "description": "Endpoint to find one debit"
      }
    }
  },
  "components": {
    "schemas": {
      "account": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "individual",
              "corporate"
            ]
          },
          "company_name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        },
        "x-examples": {
          "example-1": {
            "first_name": "string",
            "last_name": "string",
            "password": "string",
            "email": "string",
            "type": "individual",
            "company_name": "string",
            "country": "string"
          }
        }
      },
      "beneficiary": {
        "description": "",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "minLength": 1
          },
          "company_name": {
            "type": "string",
            "minLength": 1
          },
          "first_name": {
            "type": "string",
            "minLength": 1
          },
          "last_name": {
            "type": "string",
            "minLength": 1
          },
          "address": {
            "type": "object",
            "properties": {
              "street_line1": {
                "type": "string",
                "minLength": 1
              },
              "street_line2": {
                "type": "string",
                "minLength": 1
              },
              "region": {
                "type": "string",
                "minLength": 1
              },
              "city": {
                "type": "string",
                "minLength": 1
              },
              "country": {
                "type": "string",
                "minLength": 1
              },
              "postcode": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "street_line1",
              "street_line2",
              "region",
              "city",
              "country",
              "postcode"
            ]
          },
          "bank_accounts": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "required": [
                "iban",
                "bic",
                "currency"
              ],
              "properties": {
                "iban": {
                  "type": "string",
                  "minLength": 1
                },
                "bic": {
                  "type": "string",
                  "minLength": 1
                },
                "currency": {
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          }
        },
        "required": [
          "type",
          "company_name",
          "first_name",
          "last_name",
          "address",
          "bank_accounts"
        ]
      },
      "payment": {
        "type": "object",
        "x-examples": {
          "Payment Object  SCT": {
            "id": "71873979-1c48-44a1-b740-90a2bcb2835e",
            "amount": 10,
            "reason": "Invoice 123",
            "method": "FFCCTRNS",
            "payment_date": "2020-10-06",
            "currency": "EUR",
            "ledger": {
              "id": "9e51441c-de1a-4638-ba3a-6394f45b6b99"
            },
            "beneficiary": {
              "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08"
            }
          }
        },
        "title": "Payment",
        "description": "This is the Payment object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "debit"
            ]
          },
          "amount": {
            "type": "integer"
          },
          "reason": {
            "type": "string"
          },
          "beneficiary": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            }
          },
          "payment_date": {
            "type": "string"
          },
          "ledger": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            }
          },
          "methode": {
            "type": "string",
            "enum": [
              "FFCCTRNS",
              "IFCCTRNS"
            ]
          },
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "ledger": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "balance": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "amount": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              }
            }
          }
        },
        "x-examples": {
          "Ledger": {
            "id": "b94d6b3d-0034-4772-abf2-16c237f7be9f",
            "iban": "GB73OPEX00993093052561",
            "balance": {
              "id": "40a1e2d3-f401-47e9-b781-180cec1e32bc",
              "amount": "1000",
              "currency": "EUR"
            }
          }
        },
        "description": "This is the Ledger Object",
        "title": "Ledger"
      },
      "transaction": {
        "type": "object",
        "x-examples": {
          "Transaction debit": {
            "id": "b3a0dd34-6cf0-43d8-bca5-f56a58671c6a",
            "type": "debit",
            "status": "completed",
            "reason": "Invoice 123",
            "amount": 10,
            "method": "FFCCTRNS",
            "old_balance": 90,
            "currency": "EUR"
          },
          "Transaction credit": {
            "id": "3383dbd0-cbc9-4005-a00d-834d691e918f",
            "type": "credit",
            "status": "completed",
            "reason": "Invoice 965",
            "amount": 15,
            "method": "FFCCTRNS",
            "old_balance": 90,
            "currency": "EUR"
          }
        },
        "title": "Transaction",
        "description": "This is the transaction Object",
        "properties": {
          "type": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "amount": {
            "type": "integer"
          },
          "method": {
            "type": "string",
            "enum": [
              "FFCCTRNS",
              "IFCCTRNS",
              "PACS003D"
            ]
          },
          "old_balance": {
            "type": "integer"
          },
          "currency": {
            "type": "string"
          }
        }
      },
      "arrayOfBeneficiaries": {
        "title": "arrayOfBeneficiaries",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/beneficiary"
        },
        "x-examples": {
          "array Of Beneficiaries": [
            {
              "id": "537f6eca-6276-4993-bfeb-53cbbbba6d19",
              "iban": "GB55OPEX00993010899608",
              "bank_address": "45 KING WILLIAM STREET REGIS HOUSE FLOOR 2",
              "bank_name": "Openax Limited",
              "company_name": "Smith Co.",
              "bic": "OPEXGB2LXXX",
              "name": "Smith",
              "address": "123 King street",
              "city": "London",
              "type": "corporate",
              "bank_country": "UK",
              "currency": "EUR"
            },
            {
              "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
              "iban": "GB10OPEX00993074774433",
              "bank_address": "45 KING WILLIAM STREET REGIS HOUSE FLOOR 2",
              "bank_account_holder_name": "John Doe",
              "bank_name": "Openax Limited",
              "first_name": "John",
              "last_name": "Doe",
              "bic": "OPEXGB2LXXX",
              "name": "John",
              "address": "123 King street",
              "city": "London",
              "type": "individual",
              "bank_country": "UK",
              "currency": "EUR"
            }
          ]
        }
      },
      "arrayOfLedgers": {
        "title": "arrayOfLedgers",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ledger"
        },
        "x-examples": {
          "All Legers": [
            {
              "id": "b94d6b3d-0034-4772-abf2-16c237f7be9f",
              "iban": "GB73OPEX00993093052561",
              "balance": {
                "id": "40a1e2d3-f401-47e9-b781-180cec1e32bc",
                "amount": "1000",
                "currency": "EUR"
              }
            },
            {
              "id": "2b870cf2-94c3-46a1-924d-c8179db63d1d",
              "iban": "GB37OPEX00993068086670",
              "balance": {
                "id": "66f773bc-5f89-424e-860f-d6e55195f23e",
                "amount": "900",
                "currency": "GBP"
              }
            }
          ]
        }
      }
    },
    "links": {},
    "callbacks": {},
    "securitySchemes": {}
  },
  "servers": [
    {
      "description": "sandbox",
      "url": "https://sandbox-b2b.openax.com"
    },
    {
      "description": "",
      "url": "https://b2b.openax.com"
    }
  ],
  "security": [],
  "tags": [
    {
      "name": "Account"
    },
    {
      "name": "Beneficiary"
    },
    {
      "name": "Payment"
    },
    {
      "name": "Transaction"
    },
    {
      "name": "mandate"
    },
    {
      "name": "Direct Debit"
    },
    {
      "name": "Debit"
    }
  ]
}